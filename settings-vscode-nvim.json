{
	"[html]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"[javascriptreact]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"[json]": {
		"editor.defaultFormatter": "vscode.json-language-features"
	},
	"[jsonc]": {
		"editor.defaultFormatter": "vscode.json-language-features"
	},
	"[typescript]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"breadcrumbs.enabled": true,
	"editor.largeFileOptimizations": false,
	"editor.linkedEditing": true,
	"editor.rulers": [
		80,
		88,
		120
	],
	"editor.suggestSelection": "first",
	"editor.tokenColorCustomizations": {
		"comments": "#aaa",
		"textMateRules": [
			{
				"scope": "punctuation",
				"settings": {
					"foreground": "#e9a825"
				}
			}
		]
	},
	"editor.wordWrap": "off",
	"errorLens.messageEnabled": true,
	"errorLens.gutterIconsEnabled": true,
	"errorLens.enabledDiagnosticLevels": [
		"error",
		"warning",
		"info",
		"hint"
	],
	"files.associations": {
		"*.js": "javascriptreact",
		"*.rmd": "markdown"
	},
	"gitlens.codeLens.enabled": false,
	"gitlens.currentLine.enabled": false,
	"gitlens.hovers.currentLine.over": "line",
	"gitlens.views.compare.files.layout": "tree",
	"indentRainbow.indentSetter": {
		"javascript": 2,
		"typescript": 2,
		"html": 2
	},
	"javascript.updateImportsOnFileMove.enabled": "always",
	"js/ts.implicitProjectConfig.experimentalDecorators": true,
	"jupyter.alwaysTrustNotebooks": true,
	"liveServer.settings.ChromeDebuggingAttachment": true,
	"liveServer.settings.donotShowInfoMsg": true,
	"peacock.favoriteColors": [
		{
			"name": "Angular Red",
			"value": "#dd0531"
		},
		{
			"name": "Azure Blue",
			"value": "#007fff"
		},
		{
			"name": "JavaScript Yellow",
			"value": "#f9e64f"
		},
		{
			"name": "Mandalorian Blue",
			"value": "#1857a4"
		},
		{
			"name": "Node Green",
			"value": "#215732"
		},
		{
			"name": "React Blue",
			"value": "#61dafb"
		},
		{
			"name": "Something Different",
			"value": "#832561"
		},
		{
			"name": "Svelte Orange",
			"value": "#ff3d00"
		},
		{
			"name": "Vue Green",
			"value": "#42b883"
		}
	],
	"prettier.singleQuote": true,
	"prettier.trailingComma": "all",
	"prettier.useTabs": true,
	"python.languageServer": "Pylance",
	"python.analysis.typeCheckingMode": "basic",
	"python.analysis.autoImportCompletions": true,
	"terminal.integrated.defaultProfile.windows": "Git Bash",
	"terminal.integrated.profiles.windows": {
		"Powershell": {
			"source": "PowerShell",
			"icon": "terminal-powershell"
		},
		"Command Prompt": {
			"path": [
				"${env:windir}\\Sysnative\\cmd.exe",
				"${env:windir}\\System32\\cmd.exe"
			],
			"args": [],
			"icon": "terminal-cmd"
		},
		"Git Bash": {
			"source": "Git Bash"
		},
		"Windows Terminal": {
			"path": [
				"C:\\Users\\Gabriel\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe"
			]
		}
	},
	"vetur.format.defaultFormatter.html": "prettyhtml",
	"vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
	"workbench.colorCustomizations": {
		"terminal.background": "#282A36",
		"editorBracketMatch.background": "#cc2929",
		"editorBracketMatch.border": "#fce72c"
	},
	"workbench.editorAssociations": {
		"*.ipynb": "jupyter-notebook"
	},
	"liveServer.settings.donotVerifyTags": true,
	"editor.cursorStyle": "line",
	"editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
	"notebook.cellToolbarLocation": {
		"default": "right",
		"jupyter-notebook": "left"
	},
	"remote.SSH.remotePlatform": {
		"206.189.21.158": "linux",
		"c3po1-nlgroup": "linux"
	},
	"nginx-conf-hint.syntax": "sublime",
	"yaml.schemas": {},
	"yaml.customTags": [
		"!And",
		"!And sequence",
		"!If",
		"!If sequence",
		"!Not",
		"!Not sequence",
		"!Equals",
		"!Equals sequence",
		"!Or",
		"!Or sequence",
		"!FindInMap",
		"!FindInMap sequence",
		"!Base64",
		"!Join",
		"!Join sequence",
		"!Cidr",
		"!Ref",
		"!Sub",
		"!Sub sequence",
		"!GetAtt",
		"!GetAZs",
		"!ImportValue",
		"!ImportValue sequence",
		"!Select",
		"!Select sequence",
		"!Split",
		"!Split sequence"
	],
	"html.validate.styles": false,
	"editor.bracketPairColorization.enabled": true,
	"jupyter.askForKernelRestart": false,
	"editor.guides.bracketPairs": true,
	"redhat.telemetry.enabled": false,
	"vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
	"screencastMode.verticalOffset": 5,
	"screencastMode.keyboardShortcutsFormat": "command",
	"workbench.list.automaticKeyboardNavigation": false,
	// ------------
	// ---- VIM ---
	// ------------
	"vim.useSystemClipboard": true,
	"vim.useCtrlKeys": true,
	"vim.surround": true,
	"vim.highlightedyank.enable": true,
	"vim.foldfix": true,
	"vim.hlsearch": true,
	"vim.sneak": true,
	"vim.handleKeys": {
		"<C-d>": false,
		"<C-f>": false,
		"<C-c>": false,
		"<C-v>": false
	},
	"vim.insertModeKeyBindings": [
		{
			"before": [
				"j",
				"j"
			],
			"after": [
				"<Esc>"
			]
		},
		{
			"before": [
				"j",
				"k"
			],
			"after": [
				"<Esc>"
			]
		},
		{
			"before": [
				"j",
				"l"
			],
			"after": [
				"<Right>"
			]
		}
	],
	"vim.normalModeKeyBindings": [
		{
			"before": [
				"<space>"
			],
			"commands": [
				"whichkey.show"
			]
		},
		{
			"before": [
				"K"
			],
			"commands": [
				"editor.action.showHover"
			]
		},
		{
			"before": [
				"<S-l>"
			],
			"commands": [
				"workbench.action.nextEditor"
			]
		},
		{
			"before": [
				"<S-H>"
			],
			"commands": [
				"workbench.action.previousEditor"
			]
		},
		{
			"before": [
				"Y"
			],
			"after": [
				"y",
				"$"
			]
		},
		{
			// needs errorLens and Toggle ext to work
			"before": [
				"g",
				"l"
			],
			"commands": [
				{
					"command": "toggle",
					"args": {
						"id": "diagnostics",
						"value": [
							{
								"errorLens.messageEnabled": false
							},
							{
								"errorLens.messageEnabled": true
							}
						]
					}
				}
			]
		}
	],
	"vim.visualModeKeyBindings": [
		{
			"before": [
				"<space>"
			],
			"commands": [
				"whichkey.show"
			]
		}
	],
	// ------------
	// ----END VIM ---
	// ------------
	"whichkey.sortOrder": "alphabetically",
	"whichkey.delay": 0,
	"whichkey.bindings": [
		{
			"key": ";",
			"name": "commands",
			"type": "command",
			"command": "workbench.action.showCommands"
		},
		{
			"key": "/",
			"name": "comment",
			"type": "command",
			"command": "editor.action.commentLine"
			// "command": "vscode-neovim.send",
			// "args": "<C-/>"
		},
		// {
		// 	"key": "?",
		// 	"name": "View All References",
		// 	"type": "command",
		// 	"command": "references-view.find",
		// 	"when": "editorHasReferenceProvider"
		// },
		{
			"key": "b",
			"name": "Buffers/Editors...",
			"type": "bindings",
			"command": "workbench.action.showAllEditors"
		},
		{
			"key": "d",
			"name": "Debug...",
			"type": "bindings",
			"bindings": [
				{
					"key": "d",
					"name": "Start debug",
					"type": "command",
					"command": "workbench.action.debug.start"
				},
				{
					"key": "S",
					"name": "Stop debug",
					"type": "command",
					"command": "workbench.action.debug.stop"
				},
				{
					"key": "c",
					"name": "Continue debug",
					"type": "command",
					"command": "workbench.action.debug.continue"
				},
				{
					"key": "p",
					"name": "Pause debug",
					"type": "command",
					"command": "workbench.action.debug.pause"
				},
				{
					"key": "r",
					"name": "Run without debugging",
					"type": "command",
					"command": "workbench.action.debug.run"
				},
				{
					"key": "R",
					"name": "Restart ebug",
					"type": "command",
					"command": "workbench.action.debug.restart"
				},
				{
					"key": "i",
					"name": "Step into",
					"type": "command",
					"command": "workbench.action.debug.stepInto"
				},
				{
					"key": "s",
					"name": "Step over",
					"type": "command",
					"command": "workbench.action.debug.stepOver"
				},
				{
					"key": "o",
					"name": "Step out",
					"type": "command",
					"command": "workbench.action.debug.stepOut"
				},
				{
					"key": "b",
					"name": "Toggle breakpoint",
					"type": "command",
					"command": "editor.debug.action.toggleBreakpoint"
				},
				{
					"key": "B",
					"name": "Toggle inline breakpoint",
					"type": "command",
					"command": "editor.debug.action.toggleInlineBreakpoint"
				},
				{
					"key": "j",
					"name": "Jump to cursor",
					"type": "command",
					"command": "debug.jumpToCursor"
				},
				{
					"key": "v",
					"name": "REPL",
					"type": "command",
					"command": "workbench.debug.action.toggleRepl"
				},
				{
					"key": "w",
					"name": "Focus on watch window",
					"type": "command",
					"command": "workbench.debug.action.focusWatchView"
				},
				{
					"key": "W",
					"name": "Add to watch",
					"type": "command",
					"command": "editor.debug.action.selectionToWatch"
				}
			]
		},
		{
			"key": "e",
			"name": "Toggle Explorer",
			"type": "command",
			"command": "workbench.action.toggleSidebarVisibility"
		},
		{
			"key": "k",
			"name": "Close Fold",
			"type": "command",
			"command": "editor.fold"
		},
		{
			"key": "K",
			"name": "Close Folds Recursively",
			"type": "command",
			"command": "editor.foldRecursively"
		},
		{
			"key": "j",
			"name": "Open Fold",
			"type": "command",
			"command": "editor.unfold"
		},
		{
			"key": "J",
			"name": "Open Folds Recursively",
			"type": "command",
			"command": "editor.unfoldRecursively"
		},
		{
			"key": "f",
			"name": "Find & Replace...",
			"type": "bindings",
			"bindings": [
				{
					"key": "f",
					"name": "File",
					"type": "command",
					"command": "editor.action.startFindReplaceAction"
				},
				{
					"key": "s",
					"name": "Symbol",
					"type": "command",
					"command": "editor.action.rename",
					"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
				},
				{
					"key": "p",
					"name": "Project",
					"type": "command",
					"command": "workbench.action.replaceInFiles"
				}
			]
		},
		{
			"key": "g",
			"name": "Git...",
			"type": "bindings",
			"bindings": [
				{
					"key": "/",
					"name": "Search Commits",
					"command": "gitlens.showCommitSearch",
					"type": "command",
					"when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
				},
				{
					"key": "a",
					"name": "Stage",
					"type": "command",
					"command": "git.stage"
				},
				{
					"key": "b",
					"name": "Checkout",
					"type": "command",
					"command": "git.checkout"
				},
				{
					"key": "B",
					"name": "Browse",
					"type": "command",
					"command": "gitlens.openFileInRemote"
				},
				{
					"key": "c",
					"name": "Commit",
					"type": "command",
					"command": "git.commit"
				},
				{
					"key": "C",
					"name": "Cherry Pick",
					"type": "command",
					"command": "gitlens.views.cherryPick"
				},
				{
					"key": "d",
					"name": "Delete Branch",
					"type": "command",
					"command": "git.deleteBranch"
				},
				{
					"key": "f",
					"name": "Fetch",
					"type": "command",
					"command": "git.fetch"
				},
				{
					"key": "F",
					"name": "Pull From",
					"type": "command",
					"command": "git.pullFrom"
				},
				{
					"key": "g",
					"name": "Graph",
					"type": "command",
					"command": "git-graph.view"
				},
				{
					"key": "h",
					"name": "Heatmap",
					"type": "command",
					"command": "gitlens.toggleFileHeatmap"
				},
				{
					"key": "H",
					"name": "History",
					"type": "command",
					"command": "git.viewFileHistory"
				},
				{
					"key": "i",
					"name": "Init",
					"type": "command",
					"command": "git.init"
				},
				{
					"key": "j",
					"name": "Next Change",
					"type": "command",
					"command": "workbench.action.editor.nextChange"
				},
				{
					"key": "k",
					"name": "Previous Change",
					"type": "command",
					"command": "workbench.action.editor.previousChange"
				},
				{
					"key": "l",
					"name": "Toggle Line Blame",
					"type": "command",
					"command": "gitlens.toggleLineBlame",
					"when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
				},
				{
					"key": "L",
					"name": "Toggle GitLens",
					"type": "command",
					"command": "gitlens.toggleCodeLens",
					"when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
				},
				{
					"key": "m",
					"name": "Merge",
					"type": "command",
					"command": "git.merge"
				},
				{
					"key": "p",
					"name": "Push",
					"type": "command",
					"command": "git.push"
				},
				{
					"key": "P",
					"name": "Pull",
					"type": "command",
					"command": "git.pull"
				},
				{
					"key": "s",
					"name": "Stash",
					"type": "command",
					"command": "workbench.view.scm"
				},
				{
					"key": "S",
					"name": "Status",
					"type": "command",
					"command": "gitlens.showQuickRepoStatus",
					"when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
				},
				{
					"key": "t",
					"name": "Create Tag",
					"type": "command",
					"command": "git.createTag"
				},
				{
					"key": "T",
					"name": "Delete Tag",
					"type": "command",
					"command": "git.deleteTag"
				},
				{
					"key": "U",
					"name": "Unstage",
					"type": "command",
					"command": "git.unstage"
				}
			]
		},
		{
			"key": "l",
			"name": "LSP...",
			"type": "bindings",
			"bindings": [
				{
					"key": ";",
					"name": "Refactor",
					"type": "command",
					"command": "editor.action.refactor",
					"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
				},
				{
					"key": "a",
					"name": "Auto Fix",
					"type": "command",
					"command": "editor.action.autoFix",
					"when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
				},
				{
					"key": "d",
					"name": "diagnostics",
					"type": "command",
					"command": "workbench.action.problems.focus"
				},
				{
					"key": "e",
					"name": "Errors",
					"type": "command",
					"command": "workbench.actions.view.problems"
				},
				{
					"key": "f",
					"name": "Format",
					"type": "command",
					"command": "editor.action.formatDocument",
					"when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
				},
				{
					"key": "i",
					"name": "Implementation",
					"type": "command",
					"command": "editor.action.goToImplementation",
					"when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
				},
				{
					"key": "l",
					"name": "Code Lens",
					"type": "command",
					"command": "codelens.showLensesInCurrentLine"
				},
				{
					"key": "j",
					"name": "Next Problem",
					"type": "command",
					"command": "editor.action.marker.next",
					"when": "editorFocus"
				},
				{
					"key": "N",
					"name": "Next Problem (Proj)",
					"type": "command",
					"command": "editor.action.marker.nextInFiles",
					"when": "editorFocus"
				},
				{
					"key": "o",
					"name": "Outline",
					"type": "command",
					"command": "outline.focus"
				},
				{
					"key": "k",
					"name": "Prev Problem",
					"type": "command",
					"command": "editor.action.marker.prevInFiles",
					"when": "editorFocus"
				},
				{
					"key": "P",
					"name": "Prev Problem (Proj)",
					"type": "command",
					"command": "editor.action.marker.prev",
					"when": "editorFocus"
				},
				{
					"key": "q",
					"name": "Quick Fix",
					"type": "command",
					"command": "editor.action.quickFix",
					"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
				},
				{
					"key": "r",
					"name": "References",
					"type": "command",
					"command": "editor.action.goToReferences",
					"when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
				},
				{
					"key": "R",
					"name": "Rename",
					"type": "command",
					"command": "editor.action.rename",
					"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
				},
				{
					"key": "v",
					"name": "View All References",
					"type": "command",
					"command": "references-view.find",
					"when": "editorHasReferenceProvider"
				},
				{
					"key": "s",
					"name": "Go To Symbol",
					"type": "command",
					"command": "workbench.action.gotoSymbol"
				},
				{
					"key": "S",
					"name": "Show All Symbols",
					"type": "command",
					"command": "workbench.action.showAllSymbols"
				}
			]
		},
		{
			"key": "M",
			"name": "Minimap",
			"type": "command",
			"command": "editor.action.toggleMinimap"
		},
		// {
		// 	"key": "h",
		// 	"name": "No Highlight",
		// 	"type": "command",
		// 	"command": "vscode-neovim.send",
		// 	"args": ":noh<CR>"
		// },
		// {
		// {
		// 	"key": "p",
		// 	"name": "Paste from yank",
		// 	"type": "command",
		// 	"command": "vscode-neovim.send",
		// 	"args": "\"0p"
		// },
		// {
		// 	"key": "P",
		// 	"name": "Paste from yank",
		// 	"type": "command",
		// 	"command": "vscode-neovim.send",
		// 	"args": "\"0P"
		// },
		{
			"key": "q",
			"name": "Close",
			"type": "command",
			"command": "workbench.action.closeActiveEditor"
		},
		{
			"key": "S",
			"name": "Show...",
			"type": "bindings",
			"bindings": [
				{
					"key": "e",
					"name": "Show explorer",
					"type": "command",
					"command": "workbench.view.explorer"
				},
				{
					"key": "s",
					"name": "Show search",
					"type": "command",
					"command": "workbench.view.search"
				},
				{
					"key": "g",
					"name": "Show source control",
					"type": "command",
					"command": "workbench.view.scm"
				},
				{
					"key": "t",
					"name": "Show test",
					"type": "command",
					"command": "workbench.view.extension.test"
				},
				{
					"key": "r",
					"name": "Show remote explorer",
					"type": "command",
					"command": "workbench.view.remote"
				},
				{
					"key": "x",
					"name": "Show extensions",
					"type": "command",
					"command": "workbench.view.extensions"
				},
				{
					"key": "p",
					"name": "Show problem",
					"type": "command",
					"command": "workbench.actions.view.problems"
				},
				{
					"key": "o",
					"name": "Show output",
					"type": "command",
					"command": "workbench.action.output.toggleOutput"
				},
				{
					"key": "d",
					"name": "Show debug console",
					"type": "command",
					"command": "workbench.debug.action.toggleRepl"
				}
			]
		},
		{
			"key": "t",
			"name": "Terminal...",
			"type": "bindings",
			"bindings": [
				{
					"key": "t",
					"name": "Toggle Terminal",
					"type": "command",
					"command": "workbench.action.togglePanel"
				},
				{
					"key": "T",
					"name": "Focus Terminal",
					"type": "command",
					"command": "workbench.action.terminal.toggleTerminal",
					"when": "!terminalFocus"
				}
			]
		},
		{
			"key": "u",
			"name": "UI toggles...",
			"type": "bindings",
			"bindings": [
				{
					"key": "a",
					"name": "Toggle tool/activity bar visibility",
					"type": "command",
					"command": "workbench.action.toggleActivityBarVisibility"
				},
				{
					"key": "b",
					"name": "Toggle side bar visibility",
					"type": "command",
					"command": "workbench.action.toggleSidebarVisibility"
				},
				{
					"key": "j",
					"name": "Toggle panel visibility",
					"type": "command",
					"command": "workbench.action.togglePanel"
				},
				{
					"key": "F",
					"name": "Toggle full screen",
					"type": "command",
					"command": "workbench.action.toggleFullScreen"
				},
				{
					"key": "s",
					"name": "Select theme",
					"type": "command",
					"command": "workbench.action.selectTheme"
				},
				{
					"key": "m",
					"name": "Toggle maximized panel",
					"type": "command",
					"command": "workbench.action.toggleMaximizedPanel"
				},
				{
					"key": "T",
					"name": "Toggle tab visibility",
					"type": "command",
					"command": "workbench.action.toggleTabsVisibility"
				}
			]
		},
		{
			"key": "v",
			"name": "Split Vertical",
			"type": "command",
			"command": "workbench.action.splitEditor"
		},
		{
			"key": "w",
			"name": "Window...",
			"type": "bindings",
			"bindings": [
				{
					"key": "W",
					"name": "Focus previous editor group",
					"type": "command",
					"command": "workbench.action.focusPreviousGroup"
				},
				{
					"key": "h",
					"name": "Move editor group left",
					"type": "command",
					"command": "workbench.action.moveActiveEditorGroupLeft"
				},
				{
					"key": "j",
					"name": "Move editor group down",
					"type": "command",
					"command": "workbench.action.moveActiveEditorGroupDown"
				},
				{
					"key": "k",
					"name": "Move editor group up",
					"type": "command",
					"command": "workbench.action.moveActiveEditorGroupUp"
				},
				{
					"key": "l",
					"name": "Move editor group right",
					"type": "command",
					"command": "workbench.action.moveActiveEditorGroupRight"
				},
				{
					"key": "t",
					"name": "Toggle editor group sizes",
					"type": "command",
					"command": "workbench.action.toggleEditorWidths"
				},
				{
					"key": "m",
					"name": "Maximize editor group",
					"type": "command",
					"command": "workbench.action.minimizeOtherEditors"
				},
				{
					"key": "M",
					"name": "Maximize editor group and hide side bar",
					"type": "command",
					"command": "workbench.action.maximizeEditor"
				},
				{
					"key": "=",
					"name": "Reset editor group sizes",
					"type": "command",
					"command": "workbench.action.evenEditorWidths"
				},
				{
					"key": "z",
					"name": "Combine all editors",
					"type": "command",
					"command": "workbench.action.joinAllGroups"
				},
				{
					"key": "d",
					"name": "Close editor group",
					"type": "command",
					"command": "workbench.action.closeEditorsInGroup"
				},
				{
					"key": "x",
					"name": "Close all editor groups",
					"type": "command",
					"command": "workbench.action.closeAllGroups"
				}
			]
		},
		{
			"key": "x",
			"name": "Extensions",
			"type": "command",
			"command": "workbench.view.extensions"
		},
		{
			"key": "y",
			"name": "Sync...",
			"type": "bindings",
			"bindings": [
				{
					"key": "d",
					"name": "Download Settings",
					"type": "command",
					"command": "extension.downloadSettings"
				},
				{
					"key": "u",
					"name": "Upload Settings",
					"type": "command",
					"command": "extension.updateSettings"
				}
			]
		},
		{
			"key": "z",
			"name": "Toggle zen mode",
			"type": "command",
			"command": "workbench.action.toggleZenMode"
		}
	],
	"gitlens.hovers.enabled": false,
	"warmUp.changeTypingMode": "code snippets",
	"warmUp.changeCount": "15",
	"security.workspace.trust.untrustedFiles": "open",
	// "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",
	"vscode-neovim.useWSL": true,
	"terminal.integrated.fontSize": 14,
	"[dockercompose]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"vscode-neovim.neovimInitVimPaths.linux": "$HOME/.config/nvim/vscode.vim",
	"html.autoClosingTags": false,
	"[scss]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"[css]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"terminal.integrated.enableMultiLinePasteWarning": false,
	"liveshare.allowGuestDebugControl": true,
	"liveshare.allowGuestTaskControl": true,
	"liveshare.allowInvites": "all",
	"liveshare.comments": false,
	"workbench.iconTheme": "Monokai Pro (Filter Machine) Icons",
	"workbench.colorTheme": "Monokai Pro (Filter Machine)",
	"r.rpath.windows": "C:\\Program Files\\R\\R-4.2.1\\bin\\x64\\R.exe",
	"terminal.external.windowsExec": "C:\\Users\\gcournelle\\AppData\\Local\\Programs\\Git\\git-bash.exe",
	"r.alwaysUseActiveTerminal": true,
	"r.rterm.windows": "C:\\Users\\gcournelle\\.pyenv\\pyenv-win\\shims\\radian.bat",
	"errorLens.enabled": true,
	"r.bracketedPaste": true,
	"[python]": {
		"editor.formatOnType": true,
		"editor.defaultFormatter": "ms-python.black-formatter"
	},
	"[sql]": {
		"editor.defaultFormatter": "inferrinizzard.prettier-sql-vscode"
	},
	"jupyter.interactiveWindow.textEditor.autoMoveToNextCell": false,
	"sqltools.connections": [],
	"python.formatting.provider": "none"
}
